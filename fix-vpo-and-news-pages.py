#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import ftplib
import tempfile
import os

FTP_HOST = "ftp.ipage.com"
FTP_USER = "franko"
FTP_PASS = "JyvR!HK2E!N55Zt"
FTP_ROOT = "/11klassnikiru"

def upload_file(ftp, content, filename):
    with tempfile.NamedTemporaryFile(mode='w', delete=False, encoding='utf-8') as tmp:
        tmp.write(content)
        tmp_path = tmp.name
    
    with open(tmp_path, 'rb') as file:
        ftp.storbinary(f'STOR {filename}', file)
    os.unlink(tmp_path)

def main():
    print("üîß FIXING VPO AND NEWS PAGES DATABASE ISSUES")
    
    try:
        ftp = ftplib.FTP(FTP_HOST)
        ftp.login(FTP_USER, FTP_PASS)
        ftp.cwd(FTP_ROOT)
        
        # 1. Create proper VPO page with direct database queries
        print("\n1Ô∏è‚É£ Creating fixed VPO page...")
        vpo_page = '''<?php
require_once $_SERVER['DOCUMENT_ROOT'] . '/database/db_connections.php';

$page_title = '–í–£–ó—ã –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏';

// Get current page
$current_page = isset($_GET['page']) ? max(1, intval($_GET['page'])) : 1;
$per_page = 24;
$offset = ($current_page - 1) * $per_page;

// Initialize variables
$vpo_list = [];
$total_vpo = 0;
$cities = [];

// Get VPO data from database
if ($connection) {
    try {
        // Get total count
        $count_query = "SELECT COUNT(*) as total FROM vpo";
        $result = $connection->query($count_query);
        if ($result) {
            $row = $result->fetch_assoc();
            $total_vpo = intval($row['total']);
        }
        
        // Get unique cities
        $cities_query = "SELECT DISTINCT city FROM vpo WHERE city IS NOT NULL AND city != '' ORDER BY city";
        $result = $connection->query($cities_query);
        if ($result) {
            while ($row = $result->fetch_assoc()) {
                $cities[] = $row['city'];
            }
        }
        
        // Get VPO list for current page
        $vpo_query = "SELECT id, vpo_name, city, region, address, phone, website, type 
                      FROM vpo 
                      ORDER BY vpo_name ASC 
                      LIMIT " . intval($per_page) . " OFFSET " . intval($offset);
        
        $result = $connection->query($vpo_query);
        if ($result) {
            while ($row = $result->fetch_assoc()) {
                $vpo_list[] = $row;
            }
        }
    } catch (Exception $e) {
        error_log('VPO query error: ' . $e->getMessage());
    }
}

$total_pages = ceil($total_vpo / $per_page);

// Start content
$greyContent1 = '
<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">–ì–ª–∞–≤–Ω–∞—è</a></li>
                    <li class="breadcrumb-item active">–í–£–ó—ã</li>
                </ol>
            </nav>
        </div>
    </div>
</div>';

$greyContent2 = '
<div class="container">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 mb-2">üéì –í—ã—Å—à–∏–µ —É—á–µ–±–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –†–æ—Å—Å–∏–∏</h1>
            <p class="lead mb-4">–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã, –∏–Ω—Å—Ç–∏—Ç—É—Ç—ã, –∞–∫–∞–¥–µ–º–∏–∏ - –ø–æ–ª–Ω–∞—è –±–∞–∑–∞ –í–£–ó–æ–≤</p>
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-primary">' . number_format($total_vpo) . '</h3>
                            <p class="mb-0">–í—Å–µ–≥–æ –í–£–ó–æ–≤</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-success">' . count($cities) . '</h3>
                            <p class="mb-0">–ì–æ—Ä–æ–¥–æ–≤</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>';

$greyContent3 = '';
$greyContent4 = '';

$greyContent5 = '
<div class="container">
    <div class="row">';

if (!empty($vpo_list)) {
    foreach ($vpo_list as $vpo) {
        $type_badge = '';
        if (!empty($vpo['type'])) {
            $type_color = 'primary';
            if (stripos($vpo['type'], '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç') !== false) $type_color = 'success';
            elseif (stripos($vpo['type'], '–∏–Ω—Å—Ç–∏—Ç—É—Ç') !== false) $type_color = 'info';
            elseif (stripos($vpo['type'], '–∞–∫–∞–¥–µ–º–∏—è') !== false) $type_color = 'warning';
            
            $type_badge = '<span class="badge bg-' . $type_color . ' mb-2">' . htmlspecialchars($vpo['type']) . '</span>';
        }
        
        $greyContent5 .= '
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    ' . $type_badge . '
                    <h5 class="card-title">
                        <a href="/vpo/' . htmlspecialchars($vpo['id'] ?? '') . '" class="text-decoration-none">
                            ' . htmlspecialchars($vpo['vpo_name'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è') . '
                        </a>
                    </h5>
                    <p class="card-text">
                        <i class="fas fa-map-marker-alt text-primary me-1"></i>' . htmlspecialchars($vpo['city'] ?? '') . '<br>
                        <small class="text-muted">' . htmlspecialchars($vpo['region'] ?? '') . '</small>
                    </p>';
        
        if (!empty($vpo['website'])) {
            $greyContent5 .= '<p class="card-text small"><i class="fas fa-globe text-info me-1"></i><a href="' . htmlspecialchars($vpo['website']) . '" target="_blank">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç</a></p>';
        }
        
        $greyContent5 .= '
                    <a href="/vpo/' . htmlspecialchars($vpo['id'] ?? '') . '" class="btn btn-sm btn-outline-primary">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                </div>
            </div>
        </div>';
    }
} else {
    $greyContent5 .= '
    <div class="col-12">
        <div class="alert alert-info">
            <h4><i class="fas fa-university me-2"></i>–í–£–ó—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è</h4>
            <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã—Å—à–∏—Ö —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ.</p>
            <p class="mb-0">–ù–∞–π–¥–µ–Ω–æ –≤—ã—Å—à–∏—Ö —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π: ' . $total_vpo . '</p>
        </div>
    </div>';
}

$greyContent5 .= '
    </div>
</div>';

// Pagination
if ($total_pages > 1) {
    $greyContent5 .= '
    <div class="container">
        <div class="row">
            <div class="col-12">
                <nav aria-label="–°—Ç—Ä–∞–Ω–∏—Ü—ã">
                    <ul class="pagination justify-content-center">';
    
    $greyContent5 .= '<li class="page-item ' . ($current_page <= 1 ? 'disabled' : '') . '">
        <a class="page-link" href="/vpo-all-regions?page=' . ($current_page - 1) . '">–ü—Ä–µ–¥—ã–¥—É—â–∞—è</a>
    </li>';
    
    for ($i = 1; $i <= min($total_pages, 10); $i++) {
        $greyContent5 .= '<li class="page-item ' . ($i == $current_page ? 'active' : '') . '">
            <a class="page-link" href="/vpo-all-regions?page=' . $i . '">' . $i . '</a>
        </li>';
    }
    
    $greyContent5 .= '<li class="page-item ' . ($current_page >= $total_pages ? 'disabled' : '') . '">
        <a class="page-link" href="/vpo-all-regions?page=' . ($current_page + 1) . '">–°–ª–µ–¥—É—é—â–∞—è</a>
    </li>';
    
    $greyContent5 .= '
                    </ul>
                </nav>
            </div>
        </div>
    </div>';
}

$greyContent6 = '';

include $_SERVER['DOCUMENT_ROOT'] . '/real_template.php';
?>'''
        
        upload_file(ftp, vpo_page, 'vpo-all-regions-fixed.php')
        print("   ‚úÖ Created fixed VPO page")
        
        # 2. Update .htaccess to use fixed version
        print("\n2Ô∏è‚É£ Updating .htaccess...")
        
        # Download current .htaccess
        htaccess_content = []
        ftp.retrlines('RETR .htaccess', htaccess_content.append)
        
        # Update the VPO routing
        updated_htaccess = []
        for line in htaccess_content:
            if 'vpo-all-regions/?$ vpo-all-regions-new.php' in line:
                updated_htaccess.append('RewriteRule ^vpo-all-regions/?$ vpo-all-regions-fixed.php [QSA,NC,L]')
                print("   ‚úÖ Updated VPO routing")
            else:
                updated_htaccess.append(line)
        
        # Upload updated .htaccess
        with tempfile.NamedTemporaryFile(mode='w', delete=False, encoding='utf-8') as tmp:
            tmp.write('\n'.join(updated_htaccess))
            tmp_path = tmp.name
        
        with open(tmp_path, 'rb') as file:
            ftp.storbinary('STOR .htaccess', file)
        os.unlink(tmp_path)
        
        # 3. Check news page routing
        print("\n3Ô∏è‚É£ Checking news page...")
        
        # Find which news file is being used
        news_route = None
        for line in htaccess_content:
            if 'news/?$' in line and 'RewriteRule' in line:
                print(f"   Found: {line}")
                if 'news-new.php' in line:
                    news_route = 'news-new.php'
                    break
        
        if news_route:
            print(f"   News routes to: {news_route}")
            
            # Check if news-new.php exists
            try:
                # Try to download to check existence
                with tempfile.NamedTemporaryFile(delete=False) as tmp:
                    tmp_path = tmp.name
                ftp.retrbinary(f'RETR {news_route}', open(tmp_path, 'wb').write)
                os.unlink(tmp_path)
                print(f"   ‚úÖ {news_route} exists on server")
            except:
                print(f"   ‚ùå {news_route} not found, creating it...")
                
                # Create news page
                news_page = '''<?php
require_once $_SERVER['DOCUMENT_ROOT'] . '/database/db_connections.php';

$page_title = '–ù–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è';

// Get current page
$current_page = isset($_GET['page']) ? max(1, intval($_GET['page'])) : 1;
$per_page = 12;
$offset = ($current_page - 1) * $per_page;

// Initialize variables
$posts = [];
$total_news = 0;

// Get news from database
if ($connection) {
    try {
        // Get total count
        $count_query = "SELECT COUNT(*) as total FROM posts";
        $result = $connection->query($count_query);
        if ($result) {
            $row = $result->fetch_assoc();
            $total_news = intval($row['total']);
        }
        
        // Get posts for current page
        $posts_query = "SELECT id, title_post as title, text_post as text, url_slug, date_post 
                        FROM posts 
                        ORDER BY date_post DESC 
                        LIMIT " . intval($per_page) . " OFFSET " . intval($offset);
        
        $result = $connection->query($posts_query);
        if ($result) {
            while ($row = $result->fetch_assoc()) {
                $posts[] = $row;
            }
        }
    } catch (Exception $e) {
        error_log('News query error: ' . $e->getMessage());
    }
}

$total_pages = ceil($total_news / $per_page);

$greyContent1 = '
<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">–ì–ª–∞–≤–Ω–∞—è</a></li>
                    <li class="breadcrumb-item active">–ù–æ–≤–æ—Å—Ç–∏</li>
                </ol>
            </nav>
        </div>
    </div>
</div>';

$greyContent2 = '
<div class="container">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 mb-2">üì∞ –ù–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</h1>
            <p class="lead mb-4">–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ï–ì–≠, —Å–æ–±—ã—Ç–∏—è –≤ —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö</p>
            <p class="text-muted">–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ' . number_format($total_news) . '</p>
        </div>
    </div>
</div>';

$greyContent3 = '';
$greyContent4 = '';

$greyContent5 = '
<div class="container">
    <div class="row g-4">';

if (!empty($posts)) {
    foreach ($posts as $post) {
        $greyContent5 .= '
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">
                        <a href="/post/' . htmlspecialchars($post['url_slug'] ?? '') . '" class="text-decoration-none">
                            ' . htmlspecialchars($post['title'] ?? '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞') . '
                        </a>
                    </h5>
                    <p class="card-text">
                        ' . htmlspecialchars(mb_substr(strip_tags($post['text'] ?? ''), 0, 150)) . '...
                    </p>
                    <div class="d-flex justify-content-between align-items-center">
                        <small class="text-muted">
                            <i class="far fa-calendar me-1"></i>' . date('d.m.Y', strtotime($post['date_post'] ?? 'now')) . '
                        </small>
                        <a href="/post/' . htmlspecialchars($post['url_slug'] ?? '') . '" class="btn btn-sm btn-outline-primary">
                            –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                        </a>
                    </div>
                </div>
            </div>
        </div>';
    }
} else {
    $greyContent5 .= '
    <div class="col-12">
        <div class="alert alert-info">
            <h4><i class="fas fa-newspaper me-2"></i>–ù–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è</h4>
            <p>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.</p>
        </div>
    </div>';
}

$greyContent5 .= '
    </div>
</div>';

// Pagination
if ($total_pages > 1) {
    $greyContent5 .= '
    <div class="container">
        <div class="row">
            <div class="col-12">
                <nav aria-label="–°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π">
                    <ul class="pagination justify-content-center">';
    
    $greyContent5 .= '<li class="page-item ' . ($current_page <= 1 ? 'disabled' : '') . '">
        <a class="page-link" href="/news?page=' . ($current_page - 1) . '">–ü—Ä–µ–¥—ã–¥—É—â–∞—è</a>
    </li>';
    
    for ($i = 1; $i <= min($total_pages, 10); $i++) {
        $greyContent5 .= '<li class="page-item ' . ($i == $current_page ? 'active' : '') . '">
            <a class="page-link" href="/news?page=' . $i . '">' . $i . '</a>
        </li>';
    }
    
    $greyContent5 .= '<li class="page-item ' . ($current_page >= $total_pages ? 'disabled' : '') . '">
        <a class="page-link" href="/news?page=' . ($current_page + 1) . '">–°–ª–µ–¥—É—é—â–∞—è</a>
    </li>';
    
    $greyContent5 .= '
                    </ul>
                </nav>
            </div>
        </div>
    </div>';
}

$greyContent6 = '';

include $_SERVER['DOCUMENT_ROOT'] . '/real_template.php';
?>'''
                
                upload_file(ftp, news_page, 'news-new.php')
                print("   ‚úÖ Created news-new.php")
        
        ftp.quit()
        
        print("\n‚úÖ FIXED VPO AND NEWS PAGES!")
        print("\nüéØ What was fixed:")
        print("‚Ä¢ VPO page now directly queries database")
        print("‚Ä¢ News page created with proper queries")
        print("‚Ä¢ Both pages show actual counts from DB")
        print("‚Ä¢ Pagination implemented")
        print("‚Ä¢ Error handling added")
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

if __name__ == "__main__":
    main()